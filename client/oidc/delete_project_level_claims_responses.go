// Code generated by go-swagger; DO NOT EDIT.

package oidc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// DeleteProjectLevelClaimsReader is a Reader for the DeleteProjectLevelClaims structure.
type DeleteProjectLevelClaimsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectLevelClaimsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectLevelClaimsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectLevelClaimsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectLevelClaimsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProjectLevelClaimsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProjectLevelClaimsOK creates a DeleteProjectLevelClaimsOK with default headers values
func NewDeleteProjectLevelClaimsOK() *DeleteProjectLevelClaimsOK {
	return &DeleteProjectLevelClaimsOK{}
}

/*
DeleteProjectLevelClaimsOK describes a response with status code 200, with default header values.

Claims successfully deleted.
*/
type DeleteProjectLevelClaimsOK struct {
	Payload *models.ProjectLevelClaimsInfo
}

// IsSuccess returns true when this delete project level claims o k response has a 2xx status code
func (o *DeleteProjectLevelClaimsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project level claims o k response has a 3xx status code
func (o *DeleteProjectLevelClaimsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project level claims o k response has a 4xx status code
func (o *DeleteProjectLevelClaimsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project level claims o k response has a 5xx status code
func (o *DeleteProjectLevelClaimsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project level claims o k response a status code equal to that given
func (o *DeleteProjectLevelClaimsOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteProjectLevelClaimsOK) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectLevelClaimsOK) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectLevelClaimsOK) GetPayload() *models.ProjectLevelClaimsInfo {
	return o.Payload
}

func (o *DeleteProjectLevelClaimsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectLevelClaimsInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectLevelClaimsBadRequest creates a DeleteProjectLevelClaimsBadRequest with default headers values
func NewDeleteProjectLevelClaimsBadRequest() *DeleteProjectLevelClaimsBadRequest {
	return &DeleteProjectLevelClaimsBadRequest{}
}

/*
DeleteProjectLevelClaimsBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteProjectLevelClaimsBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project level claims bad request response has a 2xx status code
func (o *DeleteProjectLevelClaimsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project level claims bad request response has a 3xx status code
func (o *DeleteProjectLevelClaimsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project level claims bad request response has a 4xx status code
func (o *DeleteProjectLevelClaimsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project level claims bad request response has a 5xx status code
func (o *DeleteProjectLevelClaimsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project level claims bad request response a status code equal to that given
func (o *DeleteProjectLevelClaimsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteProjectLevelClaimsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectLevelClaimsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectLevelClaimsBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectLevelClaimsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectLevelClaimsForbidden creates a DeleteProjectLevelClaimsForbidden with default headers values
func NewDeleteProjectLevelClaimsForbidden() *DeleteProjectLevelClaimsForbidden {
	return &DeleteProjectLevelClaimsForbidden{}
}

/*
DeleteProjectLevelClaimsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteProjectLevelClaimsForbidden struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project level claims forbidden response has a 2xx status code
func (o *DeleteProjectLevelClaimsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project level claims forbidden response has a 3xx status code
func (o *DeleteProjectLevelClaimsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project level claims forbidden response has a 4xx status code
func (o *DeleteProjectLevelClaimsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project level claims forbidden response has a 5xx status code
func (o *DeleteProjectLevelClaimsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project level claims forbidden response a status code equal to that given
func (o *DeleteProjectLevelClaimsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteProjectLevelClaimsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProjectLevelClaimsForbidden) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProjectLevelClaimsForbidden) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectLevelClaimsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectLevelClaimsInternalServerError creates a DeleteProjectLevelClaimsInternalServerError with default headers values
func NewDeleteProjectLevelClaimsInternalServerError() *DeleteProjectLevelClaimsInternalServerError {
	return &DeleteProjectLevelClaimsInternalServerError{}
}

/*
DeleteProjectLevelClaimsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteProjectLevelClaimsInternalServerError struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project level claims internal server error response has a 2xx status code
func (o *DeleteProjectLevelClaimsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project level claims internal server error response has a 3xx status code
func (o *DeleteProjectLevelClaimsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project level claims internal server error response has a 4xx status code
func (o *DeleteProjectLevelClaimsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project level claims internal server error response has a 5xx status code
func (o *DeleteProjectLevelClaimsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete project level claims internal server error response a status code equal to that given
func (o *DeleteProjectLevelClaimsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteProjectLevelClaimsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProjectLevelClaimsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/project/{project-id}/oidc-custom-claims][%d] deleteProjectLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProjectLevelClaimsInternalServerError) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectLevelClaimsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
