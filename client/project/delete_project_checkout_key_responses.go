// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// DeleteProjectCheckoutKeyReader is a Reader for the DeleteProjectCheckoutKey structure.
type DeleteProjectCheckoutKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectCheckoutKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectCheckoutKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectCheckoutKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProjectCheckoutKeyOK creates a DeleteProjectCheckoutKeyOK with default headers values
func NewDeleteProjectCheckoutKeyOK() *DeleteProjectCheckoutKeyOK {
	return &DeleteProjectCheckoutKeyOK{}
}

/*
DeleteProjectCheckoutKeyOK describes a response with status code 200, with default header values.

DeleteProjectCheckoutKeyOK delete project checkout key o k
*/
type DeleteProjectCheckoutKeyOK struct {
	Payload *models.Deleted
}

// IsSuccess returns true when this delete project checkout key o k response has a 2xx status code
func (o *DeleteProjectCheckoutKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project checkout key o k response has a 3xx status code
func (o *DeleteProjectCheckoutKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project checkout key o k response has a 4xx status code
func (o *DeleteProjectCheckoutKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project checkout key o k response has a 5xx status code
func (o *DeleteProjectCheckoutKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project checkout key o k response a status code equal to that given
func (o *DeleteProjectCheckoutKeyOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteProjectCheckoutKeyOK) Error() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/checkout-key/{fingerprint}][%d] deleteProjectCheckoutKeyOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectCheckoutKeyOK) String() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/checkout-key/{fingerprint}][%d] deleteProjectCheckoutKeyOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectCheckoutKeyOK) GetPayload() *models.Deleted {
	return o.Payload
}

func (o *DeleteProjectCheckoutKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deleted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectCheckoutKeyBadRequest creates a DeleteProjectCheckoutKeyBadRequest with default headers values
func NewDeleteProjectCheckoutKeyBadRequest() *DeleteProjectCheckoutKeyBadRequest {
	return &DeleteProjectCheckoutKeyBadRequest{}
}

/*
DeleteProjectCheckoutKeyBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteProjectCheckoutKeyBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project checkout key bad request response has a 2xx status code
func (o *DeleteProjectCheckoutKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project checkout key bad request response has a 3xx status code
func (o *DeleteProjectCheckoutKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project checkout key bad request response has a 4xx status code
func (o *DeleteProjectCheckoutKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project checkout key bad request response has a 5xx status code
func (o *DeleteProjectCheckoutKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project checkout key bad request response a status code equal to that given
func (o *DeleteProjectCheckoutKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteProjectCheckoutKeyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/checkout-key/{fingerprint}][%d] deleteProjectCheckoutKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectCheckoutKeyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/checkout-key/{fingerprint}][%d] deleteProjectCheckoutKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectCheckoutKeyBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectCheckoutKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
