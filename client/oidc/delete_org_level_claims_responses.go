// Code generated by go-swagger; DO NOT EDIT.

package oidc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// DeleteOrgLevelClaimsReader is a Reader for the DeleteOrgLevelClaims structure.
type DeleteOrgLevelClaimsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOrgLevelClaimsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOrgLevelClaimsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOrgLevelClaimsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOrgLevelClaimsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOrgLevelClaimsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteOrgLevelClaimsOK creates a DeleteOrgLevelClaimsOK with default headers values
func NewDeleteOrgLevelClaimsOK() *DeleteOrgLevelClaimsOK {
	return &DeleteOrgLevelClaimsOK{}
}

/*
DeleteOrgLevelClaimsOK describes a response with status code 200, with default header values.

Claims successfully deleted.
*/
type DeleteOrgLevelClaimsOK struct {
	Payload *models.OrgLevelClaimsInfo
}

// IsSuccess returns true when this delete org level claims o k response has a 2xx status code
func (o *DeleteOrgLevelClaimsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete org level claims o k response has a 3xx status code
func (o *DeleteOrgLevelClaimsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org level claims o k response has a 4xx status code
func (o *DeleteOrgLevelClaimsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete org level claims o k response has a 5xx status code
func (o *DeleteOrgLevelClaimsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org level claims o k response a status code equal to that given
func (o *DeleteOrgLevelClaimsOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteOrgLevelClaimsOK) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *DeleteOrgLevelClaimsOK) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *DeleteOrgLevelClaimsOK) GetPayload() *models.OrgLevelClaimsInfo {
	return o.Payload
}

func (o *DeleteOrgLevelClaimsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrgLevelClaimsInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgLevelClaimsBadRequest creates a DeleteOrgLevelClaimsBadRequest with default headers values
func NewDeleteOrgLevelClaimsBadRequest() *DeleteOrgLevelClaimsBadRequest {
	return &DeleteOrgLevelClaimsBadRequest{}
}

/*
DeleteOrgLevelClaimsBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteOrgLevelClaimsBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete org level claims bad request response has a 2xx status code
func (o *DeleteOrgLevelClaimsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org level claims bad request response has a 3xx status code
func (o *DeleteOrgLevelClaimsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org level claims bad request response has a 4xx status code
func (o *DeleteOrgLevelClaimsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org level claims bad request response has a 5xx status code
func (o *DeleteOrgLevelClaimsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org level claims bad request response a status code equal to that given
func (o *DeleteOrgLevelClaimsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteOrgLevelClaimsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrgLevelClaimsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrgLevelClaimsBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteOrgLevelClaimsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgLevelClaimsForbidden creates a DeleteOrgLevelClaimsForbidden with default headers values
func NewDeleteOrgLevelClaimsForbidden() *DeleteOrgLevelClaimsForbidden {
	return &DeleteOrgLevelClaimsForbidden{}
}

/*
DeleteOrgLevelClaimsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteOrgLevelClaimsForbidden struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete org level claims forbidden response has a 2xx status code
func (o *DeleteOrgLevelClaimsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org level claims forbidden response has a 3xx status code
func (o *DeleteOrgLevelClaimsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org level claims forbidden response has a 4xx status code
func (o *DeleteOrgLevelClaimsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete org level claims forbidden response has a 5xx status code
func (o *DeleteOrgLevelClaimsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete org level claims forbidden response a status code equal to that given
func (o *DeleteOrgLevelClaimsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteOrgLevelClaimsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrgLevelClaimsForbidden) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrgLevelClaimsForbidden) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteOrgLevelClaimsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrgLevelClaimsInternalServerError creates a DeleteOrgLevelClaimsInternalServerError with default headers values
func NewDeleteOrgLevelClaimsInternalServerError() *DeleteOrgLevelClaimsInternalServerError {
	return &DeleteOrgLevelClaimsInternalServerError{}
}

/*
DeleteOrgLevelClaimsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type DeleteOrgLevelClaimsInternalServerError struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete org level claims internal server error response has a 2xx status code
func (o *DeleteOrgLevelClaimsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete org level claims internal server error response has a 3xx status code
func (o *DeleteOrgLevelClaimsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete org level claims internal server error response has a 4xx status code
func (o *DeleteOrgLevelClaimsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete org level claims internal server error response has a 5xx status code
func (o *DeleteOrgLevelClaimsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete org level claims internal server error response a status code equal to that given
func (o *DeleteOrgLevelClaimsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteOrgLevelClaimsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOrgLevelClaimsInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /org/{org-id}/oidc-custom-claims][%d] deleteOrgLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOrgLevelClaimsInternalServerError) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteOrgLevelClaimsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
