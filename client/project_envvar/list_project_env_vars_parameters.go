// Code generated by go-swagger; DO NOT EDIT.

package project_envvar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListProjectEnvVarsParams creates a new ListProjectEnvVarsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProjectEnvVarsParams() *ListProjectEnvVarsParams {
	return &ListProjectEnvVarsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProjectEnvVarsParamsWithTimeout creates a new ListProjectEnvVarsParams object
// with the ability to set a timeout on a request.
func NewListProjectEnvVarsParamsWithTimeout(timeout time.Duration) *ListProjectEnvVarsParams {
	return &ListProjectEnvVarsParams{
		timeout: timeout,
	}
}

// NewListProjectEnvVarsParamsWithContext creates a new ListProjectEnvVarsParams object
// with the ability to set a context for a request.
func NewListProjectEnvVarsParamsWithContext(ctx context.Context) *ListProjectEnvVarsParams {
	return &ListProjectEnvVarsParams{
		Context: ctx,
	}
}

// NewListProjectEnvVarsParamsWithHTTPClient creates a new ListProjectEnvVarsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProjectEnvVarsParamsWithHTTPClient(client *http.Client) *ListProjectEnvVarsParams {
	return &ListProjectEnvVarsParams{
		HTTPClient: client,
	}
}

/*
ListProjectEnvVarsParams contains all the parameters to send to the API endpoint

	for the list project env vars operation.

	Typically these are written to a http.Request.
*/
type ListProjectEnvVarsParams struct {

	/* PageToken.

	   A token to retrieve the next page of results.

	   Default: "project"
	*/
	PageToken string

	/* ProjectSlug.

	     Project slug in the form vcs-slug/org-name/repo-name.
	The / characters may be URL-escaped.
	Example: gh/CircleCI-Public/api-preview-docs

	*/
	ProjectSlug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list project env vars params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectEnvVarsParams) WithDefaults() *ListProjectEnvVarsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list project env vars params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectEnvVarsParams) SetDefaults() {
	var (
		pageTokenDefault = string("project")
	)

	val := ListProjectEnvVarsParams{
		PageToken: pageTokenDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list project env vars params
func (o *ListProjectEnvVarsParams) WithTimeout(timeout time.Duration) *ListProjectEnvVarsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list project env vars params
func (o *ListProjectEnvVarsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list project env vars params
func (o *ListProjectEnvVarsParams) WithContext(ctx context.Context) *ListProjectEnvVarsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list project env vars params
func (o *ListProjectEnvVarsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list project env vars params
func (o *ListProjectEnvVarsParams) WithHTTPClient(client *http.Client) *ListProjectEnvVarsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list project env vars params
func (o *ListProjectEnvVarsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPageToken adds the pageToken to the list project env vars params
func (o *ListProjectEnvVarsParams) WithPageToken(pageToken string) *ListProjectEnvVarsParams {
	o.SetPageToken(pageToken)
	return o
}

// SetPageToken adds the pageToken to the list project env vars params
func (o *ListProjectEnvVarsParams) SetPageToken(pageToken string) {
	o.PageToken = pageToken
}

// WithProjectSlug adds the projectSlug to the list project env vars params
func (o *ListProjectEnvVarsParams) WithProjectSlug(projectSlug string) *ListProjectEnvVarsParams {
	o.SetProjectSlug(projectSlug)
	return o
}

// SetProjectSlug adds the projectSlug to the list project env vars params
func (o *ListProjectEnvVarsParams) SetProjectSlug(projectSlug string) {
	o.ProjectSlug = projectSlug
}

// WriteToRequest writes these params to a swagger request
func (o *ListProjectEnvVarsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param page-token
	qrPageToken := o.PageToken
	qPageToken := qrPageToken
	if qPageToken != "" {

		if err := r.SetQueryParam("page-token", qPageToken); err != nil {
			return err
		}
	}

	// path param project-slug
	if err := r.SetPathParam("project-slug", o.ProjectSlug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
