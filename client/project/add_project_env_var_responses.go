// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// AddProjectEnvVarReader is a Reader for the AddProjectEnvVar structure.
type AddProjectEnvVarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProjectEnvVarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddProjectEnvVarCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProjectEnvVarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddProjectEnvVarCreated creates a AddProjectEnvVarCreated with default headers values
func NewAddProjectEnvVarCreated() *AddProjectEnvVarCreated {
	return &AddProjectEnvVarCreated{}
}

/*
AddProjectEnvVarCreated describes a response with status code 201, with default header values.

Successfully added
*/
type AddProjectEnvVarCreated struct {
	Payload *models.ProjectEnvVarInfo
}

// IsSuccess returns true when this add project env var created response has a 2xx status code
func (o *AddProjectEnvVarCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add project env var created response has a 3xx status code
func (o *AddProjectEnvVarCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project env var created response has a 4xx status code
func (o *AddProjectEnvVarCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add project env var created response has a 5xx status code
func (o *AddProjectEnvVarCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add project env var created response a status code equal to that given
func (o *AddProjectEnvVarCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddProjectEnvVarCreated) Error() string {
	return fmt.Sprintf("[POST /project/{project-slug}/envvar][%d] addProjectEnvVarCreated  %+v", 201, o.Payload)
}

func (o *AddProjectEnvVarCreated) String() string {
	return fmt.Sprintf("[POST /project/{project-slug}/envvar][%d] addProjectEnvVarCreated  %+v", 201, o.Payload)
}

func (o *AddProjectEnvVarCreated) GetPayload() *models.ProjectEnvVarInfo {
	return o.Payload
}

func (o *AddProjectEnvVarCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectEnvVarInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectEnvVarBadRequest creates a AddProjectEnvVarBadRequest with default headers values
func NewAddProjectEnvVarBadRequest() *AddProjectEnvVarBadRequest {
	return &AddProjectEnvVarBadRequest{}
}

/*
AddProjectEnvVarBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type AddProjectEnvVarBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this add project env var bad request response has a 2xx status code
func (o *AddProjectEnvVarBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add project env var bad request response has a 3xx status code
func (o *AddProjectEnvVarBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add project env var bad request response has a 4xx status code
func (o *AddProjectEnvVarBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add project env var bad request response has a 5xx status code
func (o *AddProjectEnvVarBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add project env var bad request response a status code equal to that given
func (o *AddProjectEnvVarBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddProjectEnvVarBadRequest) Error() string {
	return fmt.Sprintf("[POST /project/{project-slug}/envvar][%d] addProjectEnvVarBadRequest  %+v", 400, o.Payload)
}

func (o *AddProjectEnvVarBadRequest) String() string {
	return fmt.Sprintf("[POST /project/{project-slug}/envvar][%d] addProjectEnvVarBadRequest  %+v", 400, o.Payload)
}

func (o *AddProjectEnvVarBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *AddProjectEnvVarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
