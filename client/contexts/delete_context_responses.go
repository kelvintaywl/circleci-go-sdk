// Code generated by go-swagger; DO NOT EDIT.

package contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// DeleteContextReader is a Reader for the DeleteContext structure.
type DeleteContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteContextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteContextOK creates a DeleteContextOK with default headers values
func NewDeleteContextOK() *DeleteContextOK {
	return &DeleteContextOK{}
}

/*
DeleteContextOK describes a response with status code 200, with default header values.

DeleteContextOK delete context o k
*/
type DeleteContextOK struct {
	Payload *models.Deleted
}

// IsSuccess returns true when this delete context o k response has a 2xx status code
func (o *DeleteContextOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete context o k response has a 3xx status code
func (o *DeleteContextOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete context o k response has a 4xx status code
func (o *DeleteContextOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete context o k response has a 5xx status code
func (o *DeleteContextOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete context o k response a status code equal to that given
func (o *DeleteContextOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteContextOK) Error() string {
	return fmt.Sprintf("[DELETE /context/{id}][%d] deleteContextOK  %+v", 200, o.Payload)
}

func (o *DeleteContextOK) String() string {
	return fmt.Sprintf("[DELETE /context/{id}][%d] deleteContextOK  %+v", 200, o.Payload)
}

func (o *DeleteContextOK) GetPayload() *models.Deleted {
	return o.Payload
}

func (o *DeleteContextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deleted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteContextBadRequest creates a DeleteContextBadRequest with default headers values
func NewDeleteContextBadRequest() *DeleteContextBadRequest {
	return &DeleteContextBadRequest{}
}

/*
DeleteContextBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteContextBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete context bad request response has a 2xx status code
func (o *DeleteContextBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete context bad request response has a 3xx status code
func (o *DeleteContextBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete context bad request response has a 4xx status code
func (o *DeleteContextBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete context bad request response has a 5xx status code
func (o *DeleteContextBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete context bad request response a status code equal to that given
func (o *DeleteContextBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteContextBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /context/{id}][%d] deleteContextBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContextBadRequest) String() string {
	return fmt.Sprintf("[DELETE /context/{id}][%d] deleteContextBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteContextBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
