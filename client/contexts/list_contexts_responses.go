// Code generated by go-swagger; DO NOT EDIT.

package contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// ListContextsReader is a Reader for the ListContexts structure.
type ListContextsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListContextsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListContextsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListContextsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListContextsOK creates a ListContextsOK with default headers values
func NewListContextsOK() *ListContextsOK {
	return &ListContextsOK{}
}

/*
ListContextsOK describes a response with status code 200, with default header values.

A list of contexts
*/
type ListContextsOK struct {
	Payload *models.ContextsInfo
}

// IsSuccess returns true when this list contexts o k response has a 2xx status code
func (o *ListContextsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list contexts o k response has a 3xx status code
func (o *ListContextsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list contexts o k response has a 4xx status code
func (o *ListContextsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list contexts o k response has a 5xx status code
func (o *ListContextsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list contexts o k response a status code equal to that given
func (o *ListContextsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListContextsOK) Error() string {
	return fmt.Sprintf("[GET /context][%d] listContextsOK  %+v", 200, o.Payload)
}

func (o *ListContextsOK) String() string {
	return fmt.Sprintf("[GET /context][%d] listContextsOK  %+v", 200, o.Payload)
}

func (o *ListContextsOK) GetPayload() *models.ContextsInfo {
	return o.Payload
}

func (o *ListContextsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContextsInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContextsBadRequest creates a ListContextsBadRequest with default headers values
func NewListContextsBadRequest() *ListContextsBadRequest {
	return &ListContextsBadRequest{}
}

/*
ListContextsBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type ListContextsBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this list contexts bad request response has a 2xx status code
func (o *ListContextsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list contexts bad request response has a 3xx status code
func (o *ListContextsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list contexts bad request response has a 4xx status code
func (o *ListContextsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list contexts bad request response has a 5xx status code
func (o *ListContextsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list contexts bad request response a status code equal to that given
func (o *ListContextsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListContextsBadRequest) Error() string {
	return fmt.Sprintf("[GET /context][%d] listContextsBadRequest  %+v", 400, o.Payload)
}

func (o *ListContextsBadRequest) String() string {
	return fmt.Sprintf("[GET /context][%d] listContextsBadRequest  %+v", 400, o.Payload)
}

func (o *ListContextsBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *ListContextsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
