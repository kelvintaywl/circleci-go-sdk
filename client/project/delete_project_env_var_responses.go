// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// DeleteProjectEnvVarReader is a Reader for the DeleteProjectEnvVar structure.
type DeleteProjectEnvVarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectEnvVarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectEnvVarOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProjectEnvVarBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProjectEnvVarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProjectEnvVarOK creates a DeleteProjectEnvVarOK with default headers values
func NewDeleteProjectEnvVarOK() *DeleteProjectEnvVarOK {
	return &DeleteProjectEnvVarOK{}
}

/*
DeleteProjectEnvVarOK describes a response with status code 200, with default header values.

DeleteProjectEnvVarOK delete project env var o k
*/
type DeleteProjectEnvVarOK struct {
	Payload *models.Deleted
}

// IsSuccess returns true when this delete project env var o k response has a 2xx status code
func (o *DeleteProjectEnvVarOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete project env var o k response has a 3xx status code
func (o *DeleteProjectEnvVarOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project env var o k response has a 4xx status code
func (o *DeleteProjectEnvVarOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete project env var o k response has a 5xx status code
func (o *DeleteProjectEnvVarOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project env var o k response a status code equal to that given
func (o *DeleteProjectEnvVarOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteProjectEnvVarOK) Error() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectEnvVarOK) String() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarOK  %+v", 200, o.Payload)
}

func (o *DeleteProjectEnvVarOK) GetPayload() *models.Deleted {
	return o.Payload
}

func (o *DeleteProjectEnvVarOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deleted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectEnvVarBadRequest creates a DeleteProjectEnvVarBadRequest with default headers values
func NewDeleteProjectEnvVarBadRequest() *DeleteProjectEnvVarBadRequest {
	return &DeleteProjectEnvVarBadRequest{}
}

/*
DeleteProjectEnvVarBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type DeleteProjectEnvVarBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project env var bad request response has a 2xx status code
func (o *DeleteProjectEnvVarBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project env var bad request response has a 3xx status code
func (o *DeleteProjectEnvVarBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project env var bad request response has a 4xx status code
func (o *DeleteProjectEnvVarBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project env var bad request response has a 5xx status code
func (o *DeleteProjectEnvVarBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project env var bad request response a status code equal to that given
func (o *DeleteProjectEnvVarBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteProjectEnvVarBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectEnvVarBadRequest) String() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProjectEnvVarBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectEnvVarBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProjectEnvVarNotFound creates a DeleteProjectEnvVarNotFound with default headers values
func NewDeleteProjectEnvVarNotFound() *DeleteProjectEnvVarNotFound {
	return &DeleteProjectEnvVarNotFound{}
}

/*
DeleteProjectEnvVarNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProjectEnvVarNotFound struct {
	Payload *models.Errored
}

// IsSuccess returns true when this delete project env var not found response has a 2xx status code
func (o *DeleteProjectEnvVarNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete project env var not found response has a 3xx status code
func (o *DeleteProjectEnvVarNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete project env var not found response has a 4xx status code
func (o *DeleteProjectEnvVarNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete project env var not found response has a 5xx status code
func (o *DeleteProjectEnvVarNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete project env var not found response a status code equal to that given
func (o *DeleteProjectEnvVarNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteProjectEnvVarNotFound) Error() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProjectEnvVarNotFound) String() string {
	return fmt.Sprintf("[DELETE /project/{project-slug}/envvar/{name}][%d] deleteProjectEnvVarNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProjectEnvVarNotFound) GetPayload() *models.Errored {
	return o.Payload
}

func (o *DeleteProjectEnvVarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
