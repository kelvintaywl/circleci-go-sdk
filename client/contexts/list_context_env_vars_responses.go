// Code generated by go-swagger; DO NOT EDIT.

package contexts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// ListContextEnvVarsReader is a Reader for the ListContextEnvVars structure.
type ListContextEnvVarsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListContextEnvVarsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListContextEnvVarsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListContextEnvVarsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListContextEnvVarsOK creates a ListContextEnvVarsOK with default headers values
func NewListContextEnvVarsOK() *ListContextEnvVarsOK {
	return &ListContextEnvVarsOK{}
}

/*
ListContextEnvVarsOK describes a response with status code 200, with default header values.

A list of context environment variables
*/
type ListContextEnvVarsOK struct {
	Payload *models.ContextEnvVarsInfo
}

// IsSuccess returns true when this list context env vars o k response has a 2xx status code
func (o *ListContextEnvVarsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list context env vars o k response has a 3xx status code
func (o *ListContextEnvVarsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list context env vars o k response has a 4xx status code
func (o *ListContextEnvVarsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list context env vars o k response has a 5xx status code
func (o *ListContextEnvVarsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list context env vars o k response a status code equal to that given
func (o *ListContextEnvVarsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListContextEnvVarsOK) Error() string {
	return fmt.Sprintf("[GET /context/{id}/environment-variable][%d] listContextEnvVarsOK  %+v", 200, o.Payload)
}

func (o *ListContextEnvVarsOK) String() string {
	return fmt.Sprintf("[GET /context/{id}/environment-variable][%d] listContextEnvVarsOK  %+v", 200, o.Payload)
}

func (o *ListContextEnvVarsOK) GetPayload() *models.ContextEnvVarsInfo {
	return o.Payload
}

func (o *ListContextEnvVarsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContextEnvVarsInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListContextEnvVarsBadRequest creates a ListContextEnvVarsBadRequest with default headers values
func NewListContextEnvVarsBadRequest() *ListContextEnvVarsBadRequest {
	return &ListContextEnvVarsBadRequest{}
}

/*
ListContextEnvVarsBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type ListContextEnvVarsBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this list context env vars bad request response has a 2xx status code
func (o *ListContextEnvVarsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list context env vars bad request response has a 3xx status code
func (o *ListContextEnvVarsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list context env vars bad request response has a 4xx status code
func (o *ListContextEnvVarsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list context env vars bad request response has a 5xx status code
func (o *ListContextEnvVarsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list context env vars bad request response a status code equal to that given
func (o *ListContextEnvVarsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListContextEnvVarsBadRequest) Error() string {
	return fmt.Sprintf("[GET /context/{id}/environment-variable][%d] listContextEnvVarsBadRequest  %+v", 400, o.Payload)
}

func (o *ListContextEnvVarsBadRequest) String() string {
	return fmt.Sprintf("[GET /context/{id}/environment-variable][%d] listContextEnvVarsBadRequest  %+v", 400, o.Payload)
}

func (o *ListContextEnvVarsBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *ListContextEnvVarsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
