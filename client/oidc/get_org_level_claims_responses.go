// Code generated by go-swagger; DO NOT EDIT.

package oidc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kelvintaywl/circleci-go-sdk/models"
)

// GetOrgLevelClaimsReader is a Reader for the GetOrgLevelClaims structure.
type GetOrgLevelClaimsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgLevelClaimsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgLevelClaimsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrgLevelClaimsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgLevelClaimsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgLevelClaimsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgLevelClaimsOK creates a GetOrgLevelClaimsOK with default headers values
func NewGetOrgLevelClaimsOK() *GetOrgLevelClaimsOK {
	return &GetOrgLevelClaimsOK{}
}

/*
GetOrgLevelClaimsOK describes a response with status code 200, with default header values.

Claims successfully fetched.
*/
type GetOrgLevelClaimsOK struct {
	Payload *models.OrgLevelClaimsInfo
}

// IsSuccess returns true when this get org level claims o k response has a 2xx status code
func (o *GetOrgLevelClaimsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get org level claims o k response has a 3xx status code
func (o *GetOrgLevelClaimsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org level claims o k response has a 4xx status code
func (o *GetOrgLevelClaimsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org level claims o k response has a 5xx status code
func (o *GetOrgLevelClaimsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get org level claims o k response a status code equal to that given
func (o *GetOrgLevelClaimsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrgLevelClaimsOK) Error() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *GetOrgLevelClaimsOK) String() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsOK  %+v", 200, o.Payload)
}

func (o *GetOrgLevelClaimsOK) GetPayload() *models.OrgLevelClaimsInfo {
	return o.Payload
}

func (o *GetOrgLevelClaimsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrgLevelClaimsInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgLevelClaimsBadRequest creates a GetOrgLevelClaimsBadRequest with default headers values
func NewGetOrgLevelClaimsBadRequest() *GetOrgLevelClaimsBadRequest {
	return &GetOrgLevelClaimsBadRequest{}
}

/*
GetOrgLevelClaimsBadRequest describes a response with status code 400, with default header values.

Invalid input
*/
type GetOrgLevelClaimsBadRequest struct {
	Payload *models.Errored
}

// IsSuccess returns true when this get org level claims bad request response has a 2xx status code
func (o *GetOrgLevelClaimsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org level claims bad request response has a 3xx status code
func (o *GetOrgLevelClaimsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org level claims bad request response has a 4xx status code
func (o *GetOrgLevelClaimsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org level claims bad request response has a 5xx status code
func (o *GetOrgLevelClaimsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get org level claims bad request response a status code equal to that given
func (o *GetOrgLevelClaimsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrgLevelClaimsBadRequest) Error() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgLevelClaimsBadRequest) String() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrgLevelClaimsBadRequest) GetPayload() *models.Errored {
	return o.Payload
}

func (o *GetOrgLevelClaimsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgLevelClaimsForbidden creates a GetOrgLevelClaimsForbidden with default headers values
func NewGetOrgLevelClaimsForbidden() *GetOrgLevelClaimsForbidden {
	return &GetOrgLevelClaimsForbidden{}
}

/*
GetOrgLevelClaimsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrgLevelClaimsForbidden struct {
	Payload *models.Errored
}

// IsSuccess returns true when this get org level claims forbidden response has a 2xx status code
func (o *GetOrgLevelClaimsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org level claims forbidden response has a 3xx status code
func (o *GetOrgLevelClaimsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org level claims forbidden response has a 4xx status code
func (o *GetOrgLevelClaimsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get org level claims forbidden response has a 5xx status code
func (o *GetOrgLevelClaimsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get org level claims forbidden response a status code equal to that given
func (o *GetOrgLevelClaimsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrgLevelClaimsForbidden) Error() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgLevelClaimsForbidden) String() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgLevelClaimsForbidden) GetPayload() *models.Errored {
	return o.Payload
}

func (o *GetOrgLevelClaimsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgLevelClaimsInternalServerError creates a GetOrgLevelClaimsInternalServerError with default headers values
func NewGetOrgLevelClaimsInternalServerError() *GetOrgLevelClaimsInternalServerError {
	return &GetOrgLevelClaimsInternalServerError{}
}

/*
GetOrgLevelClaimsInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type GetOrgLevelClaimsInternalServerError struct {
	Payload *models.Errored
}

// IsSuccess returns true when this get org level claims internal server error response has a 2xx status code
func (o *GetOrgLevelClaimsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get org level claims internal server error response has a 3xx status code
func (o *GetOrgLevelClaimsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get org level claims internal server error response has a 4xx status code
func (o *GetOrgLevelClaimsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get org level claims internal server error response has a 5xx status code
func (o *GetOrgLevelClaimsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get org level claims internal server error response a status code equal to that given
func (o *GetOrgLevelClaimsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrgLevelClaimsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgLevelClaimsInternalServerError) String() string {
	return fmt.Sprintf("[GET /org/{org-id}/oidc-custom-claims][%d] getOrgLevelClaimsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrgLevelClaimsInternalServerError) GetPayload() *models.Errored {
	return o.Payload
}

func (o *GetOrgLevelClaimsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Errored)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
